{"version":3,"file":"static/js/284.e2dc20d5.chunk.js","mappings":"sLAAA,MAAMA,EAAU,mCACVC,EAAW,+BAEJC,EAAoBC,UAC/B,MAAMC,QAAiBC,MAAM,GAADC,OACvBL,EAAQ,gCAAAK,OAA+BN,IAG5C,aADmBI,EAASG,MACjB,EAGAC,EAAeL,UAC1B,MAAMC,QAAiBC,MAAM,GAADC,OACvBL,EAAQ,0BAAAK,OAAyBN,EAAO,WAAAM,OAAUG,IAGvD,aADmBL,EAASG,MACjB,EAGAG,EAAkBP,UAC7B,MAAMC,QAAiBC,MAAM,GAADC,OACvBL,EAAQ,WAAAK,OAAUK,EAAO,aAAAL,OAAYN,IAG1C,aADmBI,EAASG,MACjB,EAGAK,EAAkBT,UAC7B,MAAMC,QAAiBC,MAAM,GAADC,OACvBL,EAAQ,WAAAK,OAAUK,EAAO,qBAAAL,OAAoBN,IAGlD,aADmBI,EAASG,MACjB,EAUAM,EAAkBV,UAC7B,MAAMC,QAAiBC,MAAM,GAADC,OACvBL,EAAQ,WAAAK,OAAUK,EAAO,qBAAAL,OAAoBN,IAGlD,aADmBI,EAASG,MACjB,C,oEC9Cb,SAAgB,OAAS,uBAAuB,WAAa,2BAA2B,iBAAmB,iCAAiC,MAAQ,uB,aCGpJ,MAsDA,EAtDeO,KACb,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,IAE3CK,EAAenB,UACnB,IACE,MAAMoB,QAAaf,EAAAA,EAAAA,IAAaO,GACJ,IAAxBQ,EAAKC,QAAQC,OACfJ,EAAgB,qBAEhBF,EAAiBI,EAAKC,SACtBH,EAAgB,IAEpB,CAAE,MAAOK,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GASF,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,OAAOC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOI,WAAWF,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,YAAY,mBACZC,MAAOtB,EACPuB,SAAUC,GAAKvB,EAAcuB,EAAEC,OAAOH,OACtCI,WAfeC,IACH,UAAdA,EAAMC,KACRrB,GACF,KAcIW,EAAAA,EAAAA,KAAA,UAAQW,QAAStB,EAAaU,SAAC,cAEhCZ,IAAgBa,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAOV,aAAaY,SAAEZ,KACrDa,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAOe,iBAAiBb,SACrCd,EAAc4B,KAAIC,IACjBnB,EAAAA,EAAAA,MAAA,OAAoBC,UAAWC,EAAOiB,MAAMf,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OACEe,IAAG,mCAAA1C,OAAqCyC,EAAME,aAC9CC,IAAKH,EAAMI,SAEblB,EAAAA,EAAAA,KAAA,KAAAD,SAAIe,EAAMI,UALFJ,EAAMK,UAShB,C","sources":["api.js","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["const API_KEY = '15e8ef5623f4bb022257f8b28e9fd365';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\nexport const getCastDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__tPRCM\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"resultsContainer\":\"Movies_resultsContainer__DwstD\",\"movie\":\"Movies_movie__pLkFX\"};","import React, { useState } from 'react';\nimport { searchMovies } from 'api';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSearch = async () => {\n    try {\n      const data = await searchMovies(searchTerm);\n      if (data.results.length === 0) {\n        setErrorMessage('No movies found.');\n      } else {\n        setSearchResults(data.results);\n        setErrorMessage('');\n      }\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className={styles.movies}>\n      <h2>Search Movies</h2>\n      <div className={styles.searchForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Search movies...\"\n          value={searchTerm}\n          onChange={e => setSearchTerm(e.target.value)}\n          onKeyPress={handleKeyPress} // ObsÅ‚uga Enter z klawiatury\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      {errorMessage && <p className={styles.errorMessage}>{errorMessage}</p>}\n      <div className={styles.resultsContainer}>\n        {searchResults.map(movie => (\n          <div key={movie.id} className={styles.movie}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <p>{movie.title}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","async","response","fetch","concat","json","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","Movies","searchTerm","setSearchTerm","useState","searchResults","setSearchResults","errorMessage","setErrorMessage","handleSearch","data","results","length","error","console","_jsxs","className","styles","movies","children","_jsx","searchForm","type","placeholder","value","onChange","e","target","onKeyPress","event","key","onClick","resultsContainer","map","movie","src","poster_path","alt","title","id"],"sourceRoot":""}