{"version":3,"file":"static/js/332.591c9a3d.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["const API_KEY = '15e8ef5623f4bb022257f8b28e9fd365';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\nexport const getCastDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castList\":\"Cast_castList__ARoWn\",\"actor\":\"Cast_actor__tWtXy\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'api';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const data = await getMovieCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div className={styles.cast}>\n      <h2>Cast</h2>\n      <div className={styles.castList}>\n        {cast.map(actor => (\n          <div key={actor.id} className={styles.actor}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            {/* Add more details */}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"details\":\"MovieDetails_details__tmd20\",\"description\":\"MovieDetails_description__n2kBz\"};","// MovieDetails.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, Routes, Route } from 'react-router-dom';\nimport { getMovieDetails, getMovieCredits, getMovieReviews } from 'api';\nimport styles from './MovieDetails.module.css';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieDetails(details);\n\n        const credits = await getMovieCredits(movieId);\n        setCast(credits.cast);\n\n        const movieReviews = await getMovieReviews(movieId);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.movieDetails}>\n      <div>\n        <button onClick={handleGoBack}>Back</button>\n      </div>\n      <h2>{movieDetails.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n        alt={movieDetails.title}\n      />\n      <div>\n        <p>User score: {movieDetails.vote_average}</p>\n        <p>Overview: {movieDetails.overview}</p>\n        <p>Genres: {movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n        <p>Additional Information:</p>\n        <div>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </div>\n      </div>\n\n      <Routes>\n        <Route path=\"/movies/:movieId/cast\" element={<Cast cast={cast} />} />\n        <Route\n          path=\"/movies/:movieId/reviews\"\n          element={<Reviews reviews={reviews} />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\",\"reviewList\":\"Reviews_reviewList__uMBar\",\"review\":\"Reviews_review__sHbuN\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviews}>\n      <h2>Reviews</h2>\n      <div className={styles.reviewList}>\n        {reviews.map(review => (\n          <div key={review.id} className={styles.review}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n            {/* Add more details */}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","async","response","fetch","concat","json","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","Cast","useParams","cast","setCast","useState","useEffect","data","error","console","fetchMovieCredits","_jsxs","className","styles","children","_jsx","map","actor","src","profile_path","alt","name","id","MovieDetails","movieDetails","setMovieDetails","reviews","setReviews","details","credits","movieReviews","results","fetchMovieData","onClick","handleGoBack","window","history","back","title","poster_path","vote_average","overview","genres","genre","join","Link","to","Routes","Route","path","element","Reviews","fetchMovieReviews","review","author","content"],"sourceRoot":""}